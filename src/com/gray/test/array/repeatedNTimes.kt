package com.gray.test.array

/***
 * 961. 重复 N 次的元素
 * 在大小为 2N 的数组 A 中有 N+1 个不同的元素，其中有一个元素重复了 N 次。
 * 返回重复了 N 次的那个元素。
 *
 * 示例 1：
 * 输入：[1,2,3,3]
 * 输出：3
 *
 * 示例 2：
 * 输入：[2,1,2,5,3,2]
 * 输出：2
 *
 * 示例 3：
 * 输入：[5,1,5,2,5,3,5,4]
 * 输出：5
 *
 * 提示：
 * 4 <= A.length <= 10000
 * 0 <= A[ i] < 10000
 * A.length 为偶数
 */
/**
 * 思路：
 * 2N个里面，有N个数是重复的，那这些相同元素之间最远可能分隔多远了？
 * 1. 将N个重复的数排列好，它们之间有n-1个空位（不算两端）
 * 2. 要使它们之间分隔最远，那得每个空位里都放上一个其他元素，有一个空位里可以放两个元素
 * 3. 如果不按照2的方法排列，那必然有重复元素是紧挨着的
 */
fun repeatedNTimes(A: IntArray): Int {
    val n = A.size
    for (i in 0 until n) {
        if (i + 1 < n && A[i] == A[i + 1]) {
            return A[i]
        }
        if (i + 2 < n && A[i] == A[i + 2]) {
            return A[i]
        }
        if (i + 3 < n && A[i] == A[i + 3]) {
            return A[i]
        }
    }
    return 0
}